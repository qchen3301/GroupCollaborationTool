{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Qing\\\\Desktop\\\\GroupCollaborationTool\\\\group-collaboration\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Qing\\\\Desktop\\\\GroupCollaborationTool\\\\group-collaboration\\\\src\\\\components\\\\NewProject\\\\form.js\";\nimport React, { useState, useContext } from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport { SessionContext } from '../Session';\nimport { useHistory } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nexport default function () {\n  const history = useHistory();\n  const firebase = useContext(FirebaseContext);\n  const session = useContext(SessionContext);\n\n  const _useState = useState(session.user.uid),\n        _useState2 = _slicedToArray(_useState, 1),\n        owner = _useState2[0];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1];\n\n  const _useState5 = useState(\"Open Source\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        type = _useState6[0],\n        setType = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        description = _useState8[0],\n        setDescription = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        error = _useState10[0],\n        setError = _useState10[1];\n\n  const validate = () => {\n    return name.length > 0 && type.length > 0 && description.length > 0;\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    firebase.createProject({\n      owner,\n      name,\n      type,\n      description\n    }).then(() => history.push(ROUTES.LANDING)).catch(error => setError(error));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    autoFocus: true,\n    type: \"text\",\n    placeholder: \"project name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    value: type,\n    onChange: e => setType(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"Open Source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Open Source\"), React.createElement(\"option\", {\n    value: \"Private\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Private\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    cols: \"45\",\n    rows: \"10\",\n    placeholder: \"project description\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Create\",\n    disabled: !validate(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), error && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, error.message)));\n}","map":{"version":3,"sources":["C:/Users/Qing/Desktop/GroupCollaborationTool/group-collaboration/src/components/NewProject/form.js"],"names":["React","useState","useContext","FirebaseContext","SessionContext","useHistory","ROUTES","history","firebase","session","user","uid","owner","name","setName","type","setType","description","setDescription","error","setError","validate","length","onSubmit","event","preventDefault","createProject","then","push","LANDING","catch","e","target","value","message"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\r\nimport {FirebaseContext} from '../Firebase'\r\nimport {SessionContext} from '../Session'\r\nimport {useHistory} from 'react-router-dom'\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nexport default function() {\r\n  const history = useHistory()\r\n  const firebase = useContext(FirebaseContext)\r\n  const session = useContext(SessionContext)\r\n\r\n  const [owner] = useState(session.user.uid)\r\n  const [name, setName] = useState(\"\")\r\n  const [type, setType] = useState(\"Open Source\")\r\n  const [description, setDescription] = useState(\"\")\r\n  const [error, setError] = useState(\"\")\r\n\r\n  const validate = () => {\r\n    return (\r\n      name.length > 0 &&\r\n      type.length > 0 &&\r\n      description.length > 0\r\n    )\r\n  }\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    firebase.createProject({owner, name, type, description})\r\n      .then( () => history.push(ROUTES.LANDING) )\r\n      .catch( error => setError(error) )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          autoFocus\r\n          type=\"text\"\r\n          placeholder=\"project name\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <select value={type} onChange={e => setType(e.target.value)}>\r\n            <option value=\"Open Source\">Open Source</option>\r\n            <option value=\"Private\">Private</option>\r\n          </select>\r\n        <br/>\r\n        <textarea\r\n          cols=\"45\"\r\n          rows=\"10\"\r\n          placeholder=\"project description\"\r\n          value={description}\r\n          onChange={e => setDescription(e.target.value)}\r\n        />\r\n        <br/>\r\n        <input type=\"submit\" value=\"Create\" disabled={!validate()} />\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}