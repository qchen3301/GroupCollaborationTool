{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Qing\\\\Desktop\\\\GroupCollaborationTool\\\\group-collaboration\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_ID,\n  measurementId: process.env.REACT_MEASUREMENT_ID\n};\nexport default class Firebase {\n  constructor() {\n    this.doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password).then(userCredential => {\n      const displayName = this.auth.currentUser.email.split(\"@\")[0];\n      this.auth.currentUser.updateProfile({\n        displayName\n      });\n      return Promise.resolve(userCredential);\n    });\n\n    this.doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n    this.doSignOut = () => this.auth.signOut();\n\n    this.getProjects = () => this.db.collection(process.env.REACT_APP_PROJECTS_COLLECTION).get().then(snapshot => snapshot.docs.map(doc => {\n      return _objectSpread({}, doc.data(), {\n        id: doc.id\n      });\n    }));\n\n    this.getProject = id => this.db.collection(process.env.REACT_APP_PROJECTS_COLLECTION).doc(id).get().then(snapshot => snapshot.data());\n\n    this.createProject = ({\n      owner,\n      name,\n      type,\n      description\n    }) => this.db.collection(process.env.REACT_APP_PROJECTS_COLLECTION).add({\n      owner,\n      name,\n      type,\n      description\n    });\n\n    this.updateProject = (id, fields) => this.db.collection(process.env.REACT_APP_PROJECTS_COLLECTION).doc(id).update(fields);\n\n    this.getProfile = id => this.db.collection(process.env.REACT_APP_PROFILES_COLLECTION).doc(id).get().then(snapshot => snapshot.data());\n\n    this.updateProfile = (id, fields) => this.db.collection(process.env.REACT_APP_PROFILES_COLLECTION).doc(id).update(fields);\n\n    this.getUserProjects = id => this.db.collection(process.env.REACT_APP_PROJECTS_COLLECTION).where(\"owner\", \"==\", id).get().then(({\n      docs\n    }) => docs.map(doc => doc.data()));\n\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.firestore();\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Qing/Desktop/GroupCollaborationTool/group-collaboration/src/components/Firebase/firebase.js"],"names":["app","config","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_ID","measurementId","REACT_MEASUREMENT_ID","Firebase","constructor","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","then","userCredential","displayName","currentUser","split","updateProfile","Promise","resolve","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","getProjects","db","collection","REACT_APP_PROJECTS_COLLECTION","get","snapshot","docs","map","doc","data","id","getProject","createProject","owner","name","type","description","add","updateProject","fields","update","getProfile","REACT_APP_PROFILES_COLLECTION","getUserProjects","where","initializeApp","firestore"],"mappings":"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","sourcesContent":["import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_ID,\r\n  measurementId: process.env.REACT_MEASUREMENT_ID\r\n};\r\n\r\nexport default class Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n    this.auth = app.auth();\r\n    this.db = app.firestore();\r\n  }\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(userCredential => {\r\n        const displayName = this.auth.currentUser.email.split(\"@\")[0];\r\n        this.auth.currentUser.updateProfile({ displayName });\r\n        return Promise.resolve(userCredential);\r\n      });\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  getProjects = () =>\r\n    this.db\r\n      .collection(process.env.REACT_APP_PROJECTS_COLLECTION)\r\n      .get()\r\n      .then(snapshot =>\r\n        snapshot.docs.map(doc => {\r\n          return { ...doc.data(), id: doc.id };\r\n        })\r\n      );\r\n\r\n  getProject = id =>\r\n    this.db\r\n      .collection(process.env.REACT_APP_PROJECTS_COLLECTION)\r\n      .doc(id)\r\n      .get()\r\n      .then(snapshot => snapshot.data());\r\n\r\n  createProject = ({ owner, name, type, description }) =>\r\n    this.db.collection(process.env.REACT_APP_PROJECTS_COLLECTION).add({\r\n      owner,\r\n      name,\r\n      type,\r\n      description\r\n    });\r\n\r\n  updateProject = (id, fields) =>\r\n    this.db\r\n      .collection(process.env.REACT_APP_PROJECTS_COLLECTION)\r\n      .doc(id)\r\n      .update(fields);\r\n\r\n  getProfile = id =>\r\n    this.db\r\n      .collection(process.env.REACT_APP_PROFILES_COLLECTION)\r\n      .doc(id)\r\n      .get()\r\n      .then(snapshot => snapshot.data());\r\n\r\n  updateProfile = (id, fields) =>\r\n    this.db\r\n      .collection(process.env.REACT_APP_PROFILES_COLLECTION)\r\n      .doc(id)\r\n      .update(fields);\r\n\r\n  getUserProjects = id =>\r\n    this.db\r\n      .collection(process.env.REACT_APP_PROJECTS_COLLECTION)\r\n      .where(\"owner\", \"==\", id)\r\n      .get()\r\n      .then(({ docs }) => docs.map(doc => doc.data()));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}